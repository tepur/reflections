How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could concentrate only on things which changed from the last working version

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I don't have to remember about saving everything, i can easily get back to older version of my program whenever i make a mistake

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Cons: you can forget about saving, your computer may crash before saving
    Pros: you decide when to save -> saves are logical, logfile is much more readable and usable

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because none of this methods are always accurate and it also depends on the purpose of VC system and their typical user

How can you use the commands git log and git diff to view the history of files?

    By using git log i can see a general history of my file (history of changes) and by using git diff i can get more into details of that changes

How might using version control make you more confident to make changes that
could break something?

    Maybe i can easily repair it
    
Now that you have your workspace set up, what do you want to try using Git for?

    Maybe for my projects

